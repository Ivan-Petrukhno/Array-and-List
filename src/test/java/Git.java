/**public class Git {

 Если вы хотите изменить что-то в вашем репозитории с использованием Git,
 вам нужно выполнить одну или несколько из следующих команд:


 1)git add <file>
 git add: Добавляет изменения из вашего рабочего каталога в индекс (staging area)
 для подготовки к коммиту. Вы можете добавить файлы, папки или даже изменения в отдельных файлах.
 2)git commit -m "Ваше сообщение коммита здесь"
 git commit: Создает коммит с добавленными в индекс изменениями.
 Вам нужно добавить сообщение к коммиту, описывающее ваши изменения.


 3)git push
 git push: Отправляет ваши локальные коммиты на удаленный репозиторий
 (например, на GitHub).


 4)git pull
 git pull: Получает изменения из удаленного репозитория и объединяет их с
 вашей локальной веткой.


 5)git checkout <branch|commit|file>
 git checkout: Переключает вас между различными ветками,
 коммитами или даже файлами.


 6)git merge <branch>
 git merge: Объединяет изменения из одной ветки в другую.
 Обычно используется для объединения веток.

 Это основные команды Git, которые вы можете использовать для изменения вашего репозитория.
 Они помогут вам управлять версиями вашего кода, отслеживать изменения и
 сотрудничать с другими разработчиками.

 7)git status
 git status: Показывает текущее состояние вашего рабочего каталога и индекса.
 Он покажет вам какие файлы были изменены, добавлены или удалены.

 8)git log
 git log: Показывает историю коммитов. Вы можете увидеть список всех коммитов в вашей ветке,
 включая их хеши, авторов, даты и сообщения.

 9)git branch
 git branch: Показывает список локальных веток в вашем репозитории. Вы также можете создавать,
 удалять и переименовывать ветки с помощью этой команды.

 10)git pull --rebase
 git pull --rebase: Получает изменения из удаленного репозитория, но использует перебазирование вместо объединения.
 Это может быть полезно для создания чистой истории коммитов.

 11)git clone <repository_url>
 git clone: Клонирует удаленный репозиторий в ваш локальный каталог. Это полезно, если вы хотите начать работу с проектом,
 который уже существует на удаленном репозитории.

 12)git reset <commit>
 git reset: Позволяет отменить изменения в индексе или рабочем каталоге до определенного состояния.
 Вы можете использовать git reset для снятия коммитов с вершины ветки.



 **/